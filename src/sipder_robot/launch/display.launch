<launch>

  <!-- 判断是否需要加载风机叶片环境 -->
  <arg name="add_wind_turbine" default="true" />

  <!-- 添加点云坐标系到相机坐标系的变换 -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="static_transform_publisher" args="0 0 0 -1.57 0 -1.57 /camera /camera_depth" />
  <node name="rviz" pkg="rviz" type="rviz" respawn="false" output="screen" args="-d $(find sipder_robot)/config/spibot.rviz" />
  <!-- 机器人状态发布节点 -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen"/>

  <!-- 需要自己移动拉条改变每个关节角度就解除注释 -->
  <!-- <node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" /> -->
  <!-- 会发布一个/joint_states话题，由rviz的/robot_state_publisher节点订阅，但是只会发布0角度，
  需要注释掉joint_state_publisher，自己发布rviz话题，实现机器人在rviz中的同步运动，不注释掉会有数据冲突 -->
  <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" /> -->
  <group if="$(arg add_wind_turbine)">
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <!-- 注意gazebo定义世界不能增加机器人文件，增加了后再运行launch文件就会出现两个机器人情况 -->
      <arg name="world_name" value="$(find sipder_robot)/worlds/empty_world.world"/>
      <!-- <arg name="world_name" value="$(find sipder_robot)/worlds/box_house.world"/> -->
      <arg name="debug" value="false" />
      <arg name="gui" value="true"/>
      <arg name="paused" value="false"/>
      <arg name="use_sim_time" value="true"/>
      <arg name="headless" value="false"/>
    </include>
  </group>
  <group unless="$(arg add_wind_turbine)">
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <!-- 注意gazebo定义世界不能增加机器人文件，增加了后再运行launch文件就会出现两个机器人情况 -->
      <!-- <arg name="world_name" value="$(find sipder_robot)/worlds/empty_world.world"/> -->
      <arg name="world_name" value="$(find sipder_robot)/worlds/box_house.world"/>
      <arg name="debug" value="false" />
      <arg name="gui" value="true"/>
      <arg name="paused" value="false"/>
      <arg name="use_sim_time" value="true"/>
      <arg name="headless" value="false"/>
    </include>
  </group>
  <!-- 载入xacro文件，参数user_debug可以看spibot.xacro，false表示将机器人放下来，true表示机器人悬挂 -->
  <!-- 悬挂和放下的机器人需要的pid参数不一样，现在的pid参数是机器人放下时候调试的，悬挂机器人会出现腿部运动抖动的情况，需要另外调参 -->
  <arg name="user_debug" default="false"/>
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find sipder_robot)/xacro/spibot_with_sensors.xacro' DEBUG:=$(arg user_debug) ADD_WIND_TURBINE:=$(arg add_wind_turbine)"/>
  <!-- 将机器人模型文件导入gazebo  -->
  <node name="model" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -z 0.25 -model spibot -param robot_description -unpause " />

  <!-- Please add the following 2 lines in your own launch file -->
  <!-- 在xacro文件夹中有root_.xacro文件，实现自定义插件功能 （可视化插件借鉴unitree的plugin，插件的定义位于spibot_plugin功能包内）
       1、实现机器人base_link躯干的运动轨迹可视化，具体可以看 轨迹显示.md文件
       2、机器人运动时刻只有一条腿在摆动，其余腿末端位于地面，实现位于地面三条腿的支撑面绘制 -->
  <param name="robot_root" command="$(find xacro)/xacro --inorder '$(find sipder_robot)/xacro/root_.xacro'" />
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_robotroot" args="-urdf -param /robot_root -model traj_base"/>

  <!-- 如果需要风机叶片环境，加载风机叶片 -->
  <group if="$(arg add_wind_turbine)">
    <param name="wind_turbine" command="$(find xacro)/xacro --inorder '$(find sipder_robot)/xacro/add_wind_turbine.xacro'" />
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_windturbine" args="-urdf -param /wind_turbine -model show_Wind_turbine"/>
  </group>

</launch>




